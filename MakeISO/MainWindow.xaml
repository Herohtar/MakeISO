<Window x:Class="MakeISO.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MakeISO"
        xmlns:dnd="clr-namespace:DragAndDrop"
        mc:Ignorable="d"
        Title="MakeISO" Height="450" Width="800" Icon="Images/BurnCD.ico">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Button Content="Add File" Command="{Binding AddFileCommand}" />
            <Button Grid.Column="1" Content="Add Folder" Command="{Binding AddFolderCommand}" />
            <Button Grid.Row="1" Grid.ColumnSpan="2" Content="Remove Item" Command="{Binding RemoveItemCommand}" CommandParameter="{Binding SelectedItems, ElementName=FileList}" />
            <TextBlock Grid.Row="2" Grid.ColumnSpan="2" Text="{Binding FriendlyTotalSpaceRequired, StringFormat={}{0:N0} required on disc}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" />
            <Button Grid.RowSpan="2" Grid.Column="2" Content="Add Boot Images" Command="{Binding AddBootImagesCommand}" />
            <TextBox Grid.Column="3" Grid.ColumnSpan="2" Text="{Binding VolumeName, UpdateSourceTrigger=PropertyChanged}" MaxLength="32" />
            <Button Grid.Row="1" Grid.Column="3" Content="Write ISO" Command="{Binding WriteIsoCommand}" />
            <Button Grid.Row="1" Grid.Column="4" Content="Cancel" Command="{Binding CancelWriteCommand}" />
            <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding BiosBootFile, StringFormat=BIOS Boot Image: {0}}" />
            <TextBlock Grid.Row="2" Grid.Column="3" Text="{Binding UefiBootFile, StringFormat=UEFI Boot Image: {0}}" />
        </Grid>
        <ListView Grid.Row="1" Name="FileList" ItemsSource="{Binding FileList}" AllowDrop="True" dnd:DragDropHelper.IsDragDropEnabled="True" dnd:DragDropHelper.DragDropTarget="{Binding}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Icon">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding FileIconImage}" Width="16" Height="16" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding DisplayName}" Width="Auto" />
                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding FriendlySize}" Width="Auto" />
                </GridView>
            </ListView.View>
        </ListView>
        <TextBlock Grid.Row="2" HorizontalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Idle}">
                            <Setter Property="Text" Value="Ready" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Staging}">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}{0} of {1} files staged">
                                        <Binding Path="FilesStaged" />
                                        <Binding Path="FileCount" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Writing}">
                            <Setter Property="Text">
                                <Setter.Value>
                                    <MultiBinding StringFormat="{}{0} of {1} written">
                                        <Binding Path="FriendlyTotalBytesWritten" />
                                        <Binding Path="FriendlyTotalBytesToWrite" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <ProgressBar Grid.Row="3" Minimum="0">
            <ProgressBar.Style>
                <Style TargetType="ProgressBar">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Idle}">
                            <Setter Property="Maximum" Value="1" />
                            <Setter Property="Value" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Staging}">
                            <Setter Property="Maximum" Value="{Binding FileCount}" />
                            <Setter Property="Value" Value="{Binding FilesStaged}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WriterStatus}" Value="{x:Static local:WriterStatus.Writing}">
                            <Setter Property="Maximum" Value="{Binding TotalBytesToWrite}" />
                            <Setter Property="Value" Value="{Binding TotalBytesWritten}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>
        <TextBlock Grid.Row="4" HorizontalAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} of {1} written">
                    <Binding Path="FriendlyTotalBytesWritten" />
                    <Binding Path="FriendlyTotalBytesToWrite" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <ProgressBar Grid.Row="5" Minimum="0" Maximum="{Binding TotalBytesToWrite}" Value="{Binding TotalBytesWritten}" />
    </Grid>
</Window>
